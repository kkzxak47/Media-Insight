services:
  # MongoDB Service
  mongodb:
    image: mongodb/mongodb-community-server:latest
    container_name: mongodb_mediainsight
    networks:
      - mediainsight_network
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongoadmin
      MONGO_INITDB_ROOT_PASSWORD: mongosecret
    volumes:
      - mongo_data:/data/db

  # Kafka Service in KRaft Mode
  kafka:
    image: bitnami/kafka:latest
    container_name: kafka_mediainsight
    networks:
      - mediainsight_network
    ports:
      - "9092:9092"
    environment:
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,INTERNAL:PLAINTEXT
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093,INTERNAL://:9094
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka_mediainsight:9092,INTERNAL://kafka_mediainsight:9094
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CFG_LOG_DIRS: /bitnami/kafka/data
      ALLOW_PLAINTEXT_LISTENER: "yes"
    volumes:
      - kafka_data:/bitnami/kafka/data

  # Kafka-UI Service
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka_ui_mediainsight
    networks:
      - mediainsight_network
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka_mediainsight:9094
    depends_on:
      - kafka

# Define the custom network
networks:
  mediainsight_network:
    driver: bridge

# Define persistent volumes
volumes:
  mongo_data:
  kafka_data:
